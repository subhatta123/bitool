# Generated by Django 4.2.7 on 2025-06-23 05:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="QueryLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        blank=True,
                        help_text="Session identifier for grouping related queries",
                        max_length=255,
                    ),
                ),
                (
                    "natural_query",
                    models.TextField(
                        help_text="Original natural language query from user"
                    ),
                ),
                (
                    "generated_sql",
                    models.TextField(
                        blank=True, help_text="SQL query generated by LLM"
                    ),
                ),
                (
                    "clarification_question",
                    models.TextField(
                        blank=True, help_text="Clarification question asked by LLM"
                    ),
                ),
                (
                    "user_response",
                    models.TextField(
                        blank=True, help_text="User response to clarification question"
                    ),
                ),
                (
                    "final_sql",
                    models.TextField(
                        blank=True, help_text="Final SQL query after clarification"
                    ),
                ),
                (
                    "query_results",
                    models.JSONField(
                        blank=True, default=dict, help_text="Query execution results"
                    ),
                ),
                (
                    "execution_time",
                    models.FloatField(
                        blank=True,
                        help_text="Query execution time in seconds",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("clarification_needed", "Clarification Needed"),
                            ("error", "Error"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if query failed"
                    ),
                ),
                (
                    "llm_provider",
                    models.CharField(
                        blank=True,
                        help_text="LLM provider used for this query",
                        max_length=50,
                    ),
                ),
                (
                    "llm_model",
                    models.CharField(
                        blank=True,
                        help_text="LLM model used for this query",
                        max_length=100,
                    ),
                ),
                (
                    "tokens_used",
                    models.IntegerField(
                        blank=True, help_text="Number of tokens used by LLM", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, help_text="When the query was completed", null=True
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who made the query",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Query Log",
                "verbose_name_plural": "Query Logs",
                "db_table": "app_query_logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LLMConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("openai", "OpenAI"),
                            ("azure", "Azure OpenAI"),
                            ("local", "Local LLM"),
                            ("anthropic", "Anthropic"),
                            ("google", "Google AI"),
                        ],
                        default="openai",
                        help_text="LLM provider to use",
                        max_length=50,
                    ),
                ),
                (
                    "api_key",
                    models.TextField(
                        blank=True, help_text="API key for the LLM provider"
                    ),
                ),
                (
                    "base_url",
                    models.URLField(
                        blank=True,
                        help_text="Base URL for API calls (for custom endpoints)",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        default="gpt-3.5-turbo",
                        help_text="Name of the model to use",
                        max_length=100,
                    ),
                ),
                (
                    "temperature",
                    models.FloatField(
                        default=0.1,
                        help_text="Temperature setting for LLM responses (0.0 to 1.0)",
                    ),
                ),
                (
                    "max_tokens",
                    models.IntegerField(
                        default=1000, help_text="Maximum tokens for LLM responses"
                    ),
                ),
                (
                    "system_prompt",
                    models.TextField(
                        default="You are a helpful assistant that converts natural language to SQL queries.",
                        help_text="System prompt to use for the LLM",
                    ),
                ),
                (
                    "additional_settings",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional provider-specific settings",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this configuration is active"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this configuration",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "LLM Configuration",
                "verbose_name_plural": "LLM Configurations",
                "db_table": "app_llm_config",
            },
        ),
        migrations.CreateModel(
            name="DataSourceConnection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for the connection", max_length=200
                    ),
                ),
                (
                    "connection_type",
                    models.CharField(
                        choices=[
                            ("postgresql", "PostgreSQL"),
                            ("mysql", "MySQL"),
                            ("sqlite", "SQLite"),
                            ("oracle", "Oracle"),
                            ("sqlserver", "SQL Server"),
                            ("csv", "CSV File"),
                            ("api", "API"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "host",
                    models.CharField(
                        blank=True, help_text="Database host", max_length=255
                    ),
                ),
                (
                    "port",
                    models.IntegerField(
                        blank=True, help_text="Database port", null=True
                    ),
                ),
                (
                    "database_name",
                    models.CharField(
                        blank=True, help_text="Database name", max_length=255
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, help_text="Database username", max_length=255
                    ),
                ),
                (
                    "password",
                    models.TextField(
                        blank=True, help_text="Database password (encrypted)"
                    ),
                ),
                (
                    "connection_string",
                    models.TextField(
                        blank=True,
                        help_text="Full connection string (if not using individual fields)",
                    ),
                ),
                (
                    "schema_info",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Database schema information",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this connection is active"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_tested",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the connection was last tested",
                        null=True,
                    ),
                ),
                (
                    "test_status",
                    models.CharField(
                        default="unknown",
                        help_text="Status of last connection test",
                        max_length=50,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this connection",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Source Connection",
                "verbose_name_plural": "Data Source Connections",
                "db_table": "data_source_connections",
                "unique_together": {("name", "created_by")},
            },
        ),
        migrations.CreateModel(
            name="AppLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "Debug"),
                            ("INFO", "Info"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="INFO",
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("auth", "Authentication"),
                            ("query", "Query Processing"),
                            ("llm", "LLM Integration"),
                            ("database", "Database Operations"),
                            ("dashboard", "Dashboard"),
                            ("data_integration", "Data Integration"),
                            ("email", "Email"),
                            ("system", "System"),
                            ("api", "API"),
                        ],
                        default="system",
                        max_length=50,
                    ),
                ),
                ("message", models.TextField(help_text="Log message")),
                (
                    "details",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional details as JSON"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address of the user", null=True
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, help_text="User agent string"),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User associated with this log entry",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Application Log",
                "verbose_name_plural": "Application Logs",
                "db_table": "app_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["level", "category"], name="app_logs_level_92e6c2_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="app_logs_created_05ac7e_idx"
                    ),
                    models.Index(fields=["user"], name="app_logs_user_id_b5624f_idx"),
                ],
            },
        ),
    ]
