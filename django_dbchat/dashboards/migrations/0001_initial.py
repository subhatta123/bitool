# Generated by Django 4.2.7 on 2025-06-23 05:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Dashboard name", max_length=200)),
                (
                    "description",
                    models.TextField(blank=True, help_text="Dashboard description"),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Whether dashboard is publicly accessible",
                    ),
                ),
                (
                    "layout_config",
                    models.JSONField(
                        default=dict, help_text="Dashboard layout configuration"
                    ),
                ),
                (
                    "filters",
                    models.JSONField(default=list, help_text="Dashboard-level filters"),
                ),
                (
                    "refresh_interval",
                    models.IntegerField(
                        default=0, help_text="Auto-refresh interval in seconds"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                (
                    "access_count",
                    models.IntegerField(
                        default=0, help_text="Number of times accessed"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard",
                "verbose_name_plural": "Dashboards",
                "db_table": "dashboards",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="DashboardShare",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "permission",
                    models.CharField(
                        choices=[
                            ("view", "View Only"),
                            ("edit", "Can Edit"),
                            ("admin", "Admin"),
                        ],
                        default="view",
                        max_length=20,
                    ),
                ),
                ("shared_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboards.dashboard",
                    ),
                ),
                (
                    "shared_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboard_shares_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "dashboard_shares",
                "unique_together": {("dashboard", "user")},
            },
        ),
        migrations.CreateModel(
            name="DashboardItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(help_text="Item title", max_length=200)),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("chart", "Chart"),
                            ("kpi", "KPI"),
                            ("table", "Table"),
                            ("text", "Text"),
                            ("filter", "Filter"),
                            ("image", "Image"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "chart_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("bar", "Bar Chart"),
                            ("line", "Line Chart"),
                            ("pie", "Pie Chart"),
                            ("scatter", "Scatter Plot"),
                            ("histogram", "Histogram"),
                            ("heatmap", "Heatmap"),
                            ("treemap", "Treemap"),
                            ("gauge", "Gauge"),
                        ],
                        max_length=50,
                    ),
                ),
                ("query", models.TextField(blank=True, help_text="SQL query for data")),
                (
                    "chart_config",
                    models.JSONField(default=dict, help_text="Chart configuration"),
                ),
                (
                    "position_x",
                    models.IntegerField(default=0, help_text="X position in grid"),
                ),
                (
                    "position_y",
                    models.IntegerField(default=0, help_text="Y position in grid"),
                ),
                (
                    "width",
                    models.IntegerField(default=4, help_text="Width in grid units"),
                ),
                (
                    "height",
                    models.IntegerField(default=3, help_text="Height in grid units"),
                ),
                (
                    "data_source",
                    models.CharField(
                        blank=True, help_text="Data source identifier", max_length=200
                    ),
                ),
                (
                    "refresh_interval",
                    models.IntegerField(
                        default=0, help_text="Refresh interval in seconds"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="dashboards.dashboard",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard Item",
                "verbose_name_plural": "Dashboard Items",
                "db_table": "dashboard_items",
                "ordering": ["position_y", "position_x"],
            },
        ),
        migrations.CreateModel(
            name="DashboardFilter",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Filter name", max_length=200)),
                (
                    "display_name",
                    models.CharField(help_text="Display name", max_length=200),
                ),
                (
                    "filter_type",
                    models.CharField(
                        choices=[
                            ("date_range", "Date Range"),
                            ("select", "Select"),
                            ("multi_select", "Multi Select"),
                            ("text", "Text Input"),
                            ("numeric_range", "Numeric Range"),
                            ("boolean", "Boolean"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "column_reference",
                    models.CharField(help_text="Column being filtered", max_length=200),
                ),
                (
                    "default_value",
                    models.JSONField(
                        blank=True, default=dict, help_text="Default filter value"
                    ),
                ),
                (
                    "options",
                    models.JSONField(
                        blank=True, default=list, help_text="Available filter options"
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False, help_text="Whether filter is required"
                    ),
                ),
                (
                    "is_global",
                    models.BooleanField(
                        default=True, help_text="Whether filter applies to all items"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboard_filters",
                        to="dashboards.dashboard",
                    ),
                ),
                (
                    "target_items",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific items this filter applies to",
                        to="dashboards.dashboarditem",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard Filter",
                "verbose_name_plural": "Dashboard Filters",
                "db_table": "dashboard_filters",
            },
        ),
        migrations.CreateModel(
            name="DashboardExport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "export_format",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("png", "PNG Image"),
                            ("html", "HTML"),
                            ("excel", "Excel"),
                            ("csv", "CSV Data"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "file_path",
                    models.CharField(
                        blank=True, help_text="Path to exported file", max_length=500
                    ),
                ),
                (
                    "file_size",
                    models.BigIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "export_settings",
                    models.JSONField(default=dict, help_text="Export configuration"),
                ),
                (
                    "requested_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "download_count",
                    models.IntegerField(
                        default=0, help_text="Number of times downloaded"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="When export expires", null=True
                    ),
                ),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exports",
                        to="dashboards.dashboard",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard Export",
                "verbose_name_plural": "Dashboard Exports",
                "db_table": "dashboard_exports",
                "ordering": ["-requested_at"],
            },
        ),
        migrations.AddField(
            model_name="dashboard",
            name="shared_with_users",
            field=models.ManyToManyField(
                blank=True,
                related_name="shared_dashboards",
                through="dashboards.DashboardShare",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="DashboardVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version_number", models.IntegerField(help_text="Version number")),
                (
                    "version_name",
                    models.CharField(
                        blank=True,
                        help_text="Version name or description",
                        max_length=200,
                    ),
                ),
                (
                    "dashboard_data",
                    models.JSONField(help_text="Complete dashboard configuration"),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "is_published",
                    models.BooleanField(
                        default=False, help_text="Whether this version is published"
                    ),
                ),
                (
                    "change_summary",
                    models.TextField(blank=True, help_text="Summary of changes"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="dashboards.dashboard",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard Version",
                "verbose_name_plural": "Dashboard Versions",
                "db_table": "dashboard_versions",
                "ordering": ["-version_number"],
                "unique_together": {("dashboard", "version_number")},
            },
        ),
    ]
