services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: dbchat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-dbchat_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application
  web:
    build: .
    command: >
      sh -c "echo 'Skipping migrations temporarily' &&
             echo 'Starting gunicorn server...' &&
             gunicorn dbchat_project.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DATABASE_NAME=dbchat
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-dbchat_password}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/1
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker for background tasks
  celery:
    build: .
    command: celery -A dbchat_project worker --loglevel=info
    volumes:
      - .:/app
      - media_volume:/app/media
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DATABASE_NAME=dbchat
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-dbchat_password}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/3
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Celery Beat for scheduled tasks
  celery-beat:
    build: .
    command: celery -A dbchat_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DATABASE_NAME=dbchat
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-dbchat_password}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/3
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped
    profiles:
      - production

  # Flower for Celery monitoring (development)
  flower:
    build: .
    command: celery -A dbchat_project flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/3
    depends_on:
      - redis
    profiles:
      - development

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: 